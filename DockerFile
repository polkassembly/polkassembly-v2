# 1. Base image for the builder comment
FROM node:22-alpine AS builder

WORKDIR /app

# 2. Accept ALL secrets as build arguments from the 'docker build' command.
ARG NEXT_PUBLIC_APP_ENV
ARG NEXT_PUBLIC_DEFAULT_NETWORK
ARG FIREBASE_SERVICE_ACC_CONFIG
ARG REDIS_URL
ARG ACCESS_TOKEN_PRIVATE_KEY
ARG ACCESS_TOKEN_PUBLIC_KEY
ARG ACCESS_TOKEN_PASSPHRASE
ARG REFRESH_TOKEN_PRIVATE_KEY
ARG REFRESH_TOKEN_PUBLIC_KEY
ARG REFRESH_TOKEN_PASSPHRASE
ARG NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY
ARG NEXT_PUBLIC_ALGOLIA_APP_ID
ARG SUBSCAN_API_KEY
ARG IS_CACHE_ENABLED
ARG IS_AI_ENABLED
ARG IS_NOTIFICATION_SERVICE_ENABLED
ARG IS_SUBSCAN_ENABLED
ARG AI_SERVICE_URL
ARG TOOLS_PASSPHRASE
ARG NOTIFICATION_ENGINE_API_KEY
ARG NEXT_PUBLIC_IMBB_KEY
ARG NEXT_PUBLIC_POLKASSEMBLY_API_KEY
ARG ALGOLIA_WRITE_API_KEY
ARG NEXT_PUBLIC_GA_ID

# 3. Set them as environment variables ONLY for the commands in this builder stage.
ENV NEXT_PUBLIC_APP_ENV=$NEXT_PUBLIC_APP_ENV
ENV NEXT_PUBLIC_DEFAULT_NETWORK=$NEXT_PUBLIC_DEFAULT_NETWORK
ENV FIREBASE_SERVICE_ACC_CONFIG=$FIREBASE_SERVICE_ACC_CONFIG
ENV REDIS_URL=$REDIS_URL
ENV ACCESS_TOKEN_PRIVATE_KEY=$ACCESS_TOKEN_PRIVATE_KEY
ENV ACCESS_TOKEN_PUBLIC_KEY=$ACCESS_TOKEN_PUBLIC_KEY
ENV ACCESS_TOKEN_PASSPHRASE=$ACCESS_TOKEN_PASSPHRASE
ENV REFRESH_TOKEN_PRIVATE_KEY=$REFRESH_TOKEN_PRIVATE_KEY
ENV REFRESH_TOKEN_PUBLIC_KEY=$REFRESH_TOKEN_PUBLIC_KEY
ENV REFRESH_TOKEN_PASSPHRASE=$REFRESH_TOKEN_PASSPHRASE
ENV NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY=$NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY
ENV NEXT_PUBLIC_ALGOLIA_APP_ID=$NEXT_PUBLIC_ALGOLIA_APP_ID
ENV SUBSCAN_API_KEY=$SUBSCAN_API_KEY
ENV IS_CACHE_ENABLED=$IS_CACHE_ENABLED
ENV IS_AI_ENABLED=$IS_AI_ENABLED
ENV IS_NOTIFICATION_SERVICE_ENABLED=$IS_NOTIFICATION_SERVICE_ENABLED
ENV IS_SUBSCAN_ENABLED=$IS_SUBSCAN_ENABLED
ENV AI_SERVICE_URL=$AI_SERVICE_URL
ENV TOOLS_PASSPHRASE=$TOOLS_PASSPHRASE
ENV NOTIFICATION_ENGINE_API_KEY=$NOTIFICATION_ENGINE_API_KEY
ENV NEXT_PUBLIC_IMBB_KEY=$NEXT_PUBLIC_IMBB_KEY
ENV NEXT_PUBLIC_POLKASSEMBLY_API_KEY=$NEXT_PUBLIC_POLKASSEMBLY_API_KEY
ENV ALGOLIA_WRITE_API_KEY=$ALGOLIA_WRITE_API_KEY
ENV NEXT_PUBLIC_GA_ID=$NEXT_PUBLIC_GA_ID

# 4. Install dependencies
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --production=false

# 5. Copy source code
COPY . .

# 6. Build the application. All variables are now available to this command.
RUN yarn build

# 7. Prod image for the runner stage
FROM node:22-alpine AS runner

WORKDIR /app

# 8. Copy only the necessary build artifacts from the builder stage
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# 9. Set production environment variables
ENV NODE_ENV=production
ENV PORT=8080
ENV HOST=test.polkassembly.io

# NOTE: The secrets are NOT included in this final production image.
# They are injected at runtime by Cloud Run.

# 10. Expose the port
EXPOSE 8080

# 11. Start the Next.js server
CMD ["node", "server.js"]